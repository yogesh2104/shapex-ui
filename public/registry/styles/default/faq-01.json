{
  "name": "faq-01",
  "type": "registry:block",
  "description": "A FQAs block",
  "registryDependencies": [
    "tabs",
    "accordion",
    "badge"
  ],
  "files": [
    {
      "path": "blocks/faq-01/page.tsx",
      "content": "import FAQOne from \"./components/faq-one\";\r\n\r\nexport default function Page() {\r\n  return (\r\n    <div className=\"\">\r\n      <FAQOne />\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:page",
      "target": "app/faq/page.tsx"
    },
    {
      "path": "blocks/faq-01/components/faq-one.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/default/blocks/faq-01/components/tabs\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/registry/default/ui/accordion\";\nimport { Badge } from \"@/registry/default/ui/badge\";\nimport { FAQ_SECTIONS, FAQItem, ViewType } from \"./data\";\n\ninterface FAQAccordionProps {\n  category: string;\n  items: FAQItem[];\n}\n\nconst FAQAccordion: React.FC<FAQAccordionProps> = ({ category, items }) => (\n  <div className=\"\">\n    <Badge variant={\"outline\"} className=\"py-2 px-6 rounded-md\">\n      {category}\n    </Badge>\n    <Accordion type=\"single\" collapsible className=\"w-full\">\n      {items.map((faq) => (\n        <AccordionItem key={faq.id} value={faq.id}>\n          <AccordionTrigger className=\"text-left hover:no-underline\">\n            {faq.question}\n          </AccordionTrigger>\n          <AccordionContent>{faq.answer}</AccordionContent>\n        </AccordionItem>\n      ))}\n    </Accordion>\n  </div>\n);\n\nexport default function FAQSection() {\n  const [activeView, setActiveView] = useState<ViewType>(\"general\");\n\n  return (\n    <div className=\"container mx-auto px-4 py-16 max-w-4xl\">\n      <header className=\"text-center mb-12\">\n        <p className=\"text-sm font-medium text-primary mb-2\">FAQs</p>\n        <h1 className=\"text-4xl font-bold tracking-tight mb-4\">\n          Frequently asked questions\n        </h1>\n        <p className=\"text-xl text-muted-foreground\">\n          Need help with something? Here are our most frequently asked\n          questions.\n        </p>\n      </header>\n\n      <div className=\"flex justify-center sticky top-2\">\n        <Tabs\n          defaultValue=\"general\"\n          onValueChange={(value) => setActiveView(value as ViewType)}\n          className=\"mb-8 max-w-xl border rounded-xl bg-background\"\n        >\n          <TabsList className=\"w-full justify-start h-12 p-1\">\n            <TabsTrigger value=\"general\">General FAQs</TabsTrigger>\n            <TabsTrigger value=\"icons\">UI Icons</TabsTrigger>\n            <TabsTrigger value=\"library\">Library</TabsTrigger>\n          </TabsList>\n        </Tabs>\n      </div>\n\n      <FAQAccordion\n        category={FAQ_SECTIONS[activeView].category}\n        items={FAQ_SECTIONS[activeView].items}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/faq-01/components/tabs.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md p-1 text-muted-foreground\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center whitespace-nowrap rounded-lg px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:border data-[state=active]:text-foreground\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "meta": {
    "iframeHeight": "600px"
  },
  "categories": [
    "faq"
  ]
}