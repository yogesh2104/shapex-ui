{
  "name": "faq-03",
  "type": "registry:block",
  "description": "A FAQs.",
  "registryDependencies": [
    "card"
  ],
  "files": [
    {
      "path": "blocks/faq-03/page.tsx",
      "content": "import FAQThree from \"@/registry/default/blocks/faq-03/components/faq-three\";\n\nexport default function Page() {\n  return (\n    <div className=\"md:container mx-auto\">\n      <FAQThree />\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/faq/page.tsx"
    },
    {
      "path": "blocks/faq-03/components/faq-three.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/registry/default/ui/accordion\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\";\nimport { FAQ_SECTIONS } from \"./data\";\nimport { OpenContactForm } from \"@/registry/default/blocks/faq-03/components/open-contact-form\";\n\nconst FAQThree: React.FC = () => {\n  return (\n    <section className=\"py-12 bg-gradient-to-b\">\n      <div className=\"container mx-auto px-4\">\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-3xl font-bold text-white sm:text-4xl lg:text-5xl\">\n              Frequently Asked Questions\n            </CardTitle>\n            <p className=\"mt-4 text-lg text-gray-300\">\n              Explore common questions about AuraUI\n            </p>\n          </CardHeader>\n          <CardContent className=\"grid md:grid-cols-2 gap-8 mt-8\">\n            {FAQ_SECTIONS.map((faq, faqIndx) => (\n              <div key={faqIndx} className=\"mb-8\">\n                <Accordion\n                  type=\"multiple\"\n                  className=\"w-full\"\n                  defaultValue={[faq.question]}\n                >\n                  <AccordionItem value={faq.question}>\n                    <AccordionTrigger className=\"text-white hover:text-primary hover:no-underline\">\n                      {faq.question}\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-gray-300\">\n                      {faq.answer}\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n        <div className=\"mt-12 text-center\">\n          <OpenContactForm />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FAQThree;\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/faq-03/components/open-contact-form.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useOutsideClick } from \"@/registry/default/blocks/faq-03/hook/use-outside-click\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/default/ui/card\";\r\nimport { Label } from \"@/registry/default/ui/label\";\r\nimport { Input } from \"@/registry/default/ui/input\";\r\nimport { Textarea } from \"@/registry/default/ui/textarea\";\r\nimport { Button } from \"@/registry/default/ui/button\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport function OpenContactForm() {\r\n  const [active, setActive] = useState<boolean | null>(null);\r\n  const ref = useRef<HTMLDivElement>(null as unknown as HTMLDivElement);\r\n\r\n  useEffect(() => {\r\n    function onKeyDown(event: KeyboardEvent) {\r\n      if (event.key === \"Escape\") {\r\n        setActive(false);\r\n      }\r\n    }\r\n\r\n    if (active && typeof active === \"object\") {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\r\n  }, [active]);\r\n\r\n  useOutsideClick(ref, () => setActive(null));\r\n\r\n  return (\r\n    <>\r\n      <AnimatePresence>\r\n        {active ? (\r\n          <div className=\"fixed inset-0  grid place-items-center z-[100]\">\r\n            <motion.button\r\n              layout\r\n              initial={{\r\n                opacity: 0,\r\n              }}\r\n              animate={{\r\n                opacity: 1,\r\n              }}\r\n              exit={{\r\n                opacity: 0,\r\n                transition: {\r\n                  duration: 0.05,\r\n                },\r\n              }}\r\n              className=\"flex absolute top-0 right-6 border bg-white lg:hidden items-center justify-center rounded-full\"\r\n              onClick={() => setActive(null)}\r\n            >\r\n              <X className=\"text-black size-4\" />\r\n            </motion.button>\r\n            <motion.div\r\n              layoutId={`card-1`}\r\n              ref={ref}\r\n              className=\"w-full max-w-[500px]  h-full md:h-fit p-2 flex flex-col  overflow-hidden\"\r\n            >\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Contact Us</CardTitle>\r\n                  <CardDescription>\r\n                    Send us a message and we'll get back to you soon.\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <form className=\"space-y-4\">\r\n                    <div className=\"space-y-2 text-start\">\r\n                      <Label htmlFor=\"name\">Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Your name\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2 text-start\">\r\n                      <Label htmlFor=\"email\">Email</Label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"your.email@example.com\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2 text-start\">\r\n                      <Label htmlFor=\"message\">Message</Label>\r\n                      <Textarea\r\n                        id=\"message\"\r\n                        name=\"message\"\r\n                        placeholder=\"Your message here...\"\r\n                        rows={4}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </CardContent>\r\n                <CardFooter>\r\n                  <Button type=\"submit\" className=\"w-full\">\r\n                    {\" \"}\r\n                    Send Message\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </motion.div>\r\n          </div>\r\n        ) : null}\r\n      </AnimatePresence>\r\n      <div className=\"max-w-sm mx-auto gap-4\">\r\n        <motion.button\r\n          layoutId={`card-1`}\r\n          onClick={() => setActive(true)}\r\n          className=\"p-4 cursor-pointer\"\r\n        >\r\n          Can&apos;t find your answer? Contact us\r\n        </motion.button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/faq-03/hook/use-outside-click.ts",
      "content": "import React, { useEffect } from \"react\";\n\n/**\n * Hook: useOutsideClick\n *\n * This hook listens for clicks outside a specified DOM element and invokes a callback function.\n *\n * Source: [https://ui.aceternity.com/components/expandable-card by Manu Arora]\n *\n */\n\nexport const useOutsideClick = (\n  ref: React.RefObject<HTMLDivElement>,\n  callback: Function,\n) => {\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      callback(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, callback]);\n};\n",
      "type": "registry:hook",
      "target": ""
    }
  ],
  "meta": {
    "iframeHeight": "750px"
  },
  "categories": [
    "faq"
  ]
}