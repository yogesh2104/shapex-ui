{
  "name": "signup-02",
  "type": "registry:block",
  "description": "A Signup form with Password Validation.",
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label",
    "hover-card"
  ],
  "files": [
    {
      "path": "blocks/signup-02/page.tsx",
      "content": "import SignUpTwo from \"@/registry/default/blocks/signup-02/components/signup-two\";\r\n\r\nexport default function Page() {\r\n  return (\r\n    <div className=\"\">\r\n      <SignUpTwo />\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:page",
      "target": "@/components/signup.tsx"
    },
    {
      "path": "blocks/signup-02/components/signup-two.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/default/ui/card\"; // npx shadcn@latest add card\r\nimport { Label } from \"@/registry/default/ui/label\"; // npx shadcn@latest add label\r\nimport { Input } from \"@/registry/default/ui/input\"; // npx shadcn@latest add input\r\nimport { Button } from \"@/registry/default/ui/button\"; //npx shadcn@latest add button\r\nimport { Check, Eye, EyeOff, Info, X } from \"lucide-react\";\r\nimport {\r\n  HoverCard,\r\n  HoverCardContent,\r\n  HoverCardTrigger,\r\n} from \"@/registry/default/ui/hover-card\"; // npx shadcn@latest add hover-card\r\n\r\ntype StrengthScore = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\ntype checkType = {\r\n  met: boolean;\r\n  text: string;\r\n};\r\n\r\ntype PasswordStrength = {\r\n  score: StrengthScore;\r\n  check: checkType[];\r\n};\r\n\r\nconst PASSWORD_REQUIREMENTS = [\r\n  { regex: /.{8,}/, text: \"At least 8 characters\" },\r\n  { regex: /[0-9]/, text: \"At least 1 number\" },\r\n  { regex: /[a-z]/, text: \"At least 1 lowercase letter\" },\r\n  { regex: /[A-Z]/, text: \"At least 1 uppercase letter\" },\r\n  { regex: /[!-\\/:-@[-`{-~]/, text: \"At least 1 special characters\" },\r\n] as const;\r\n\r\nconst SignUpTwo = () => {\r\n  const [password, setPassword] = React.useState<string>(\"\");\r\n  const [isVisible, setIsVisible] = React.useState<boolean>(false);\r\n\r\n  const PasswordStrength = React.useMemo((): PasswordStrength => {\r\n    const requirements = PASSWORD_REQUIREMENTS.map((req) => ({\r\n      met: req.regex.test(password),\r\n      text: req.text,\r\n    }));\r\n\r\n    return {\r\n      score: requirements.filter((req) => req.met).length as StrengthScore,\r\n      check: requirements,\r\n    };\r\n  }, [password]);\r\n\r\n  return (\r\n    <section className=\"\">\r\n      <div className=\"py-10\">\r\n        <Card className=\"mx-auto max-w-lg rounded-xl\">\r\n          <CardHeader>\r\n            <div className=\"text-center mb-4\">\r\n              <h2 className=\"text-3xl font-bold\">Create Account</h2>\r\n              <p className=\"mt-3\">\r\n                Already have an account?{\" \"}\r\n                <Link\r\n                  href=\"#\"\r\n                  className=\"underline text-primary hover:text-primary font-medium\"\r\n                >\r\n                  Sign in\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <form>\r\n              <div className=\"grid gap-4\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"fname\">First Name</Label>\r\n                    <Input\r\n                      id=\"fname\"\r\n                      type=\"text\"\r\n                      name=\"fname\"\r\n                      placeholder=\"Enter Your First Name.\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"lname\">Last Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"lname\"\r\n                      name=\"lname\"\r\n                      placeholder=\"Enter Your Last Name.\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"username\">Username</Label>\r\n                    <Input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      name=\"username\"\r\n                      placeholder=\"Choose Your Username\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"demo@example.com\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid gap-2 relative\">\r\n                  <div className=\"flex justify-between\">\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <HoverCard openDelay={200}>\r\n                      <HoverCardTrigger>\r\n                        <Info size={20} className={`cursor-pointer`} />\r\n                      </HoverCardTrigger>\r\n                      <HoverCardContent className=\"bg-background\">\r\n                        <ul\r\n                          className=\"space-y-1.5\"\r\n                          aria-label=\"Password requirements\"\r\n                        >\r\n                          {PasswordStrength.check.map((req, index) => (\r\n                            <li\r\n                              key={index}\r\n                              className=\"flex items-center space-x-2\"\r\n                            >\r\n                              {req.met ? (\r\n                                <Check size={16} className=\"text-emerald-500\" />\r\n                              ) : (\r\n                                <X\r\n                                  size={16}\r\n                                  className=\"text-muted-foreground/80\"\r\n                                />\r\n                              )}\r\n                              <span\r\n                                className={`text-xs ${\r\n                                  req.met\r\n                                    ? \"text-emerald-600\"\r\n                                    : \"text-muted-foreground\"\r\n                                }`}\r\n                              >\r\n                                {req.text}\r\n                                <span className=\"sr-only\">\r\n                                  {req.met\r\n                                    ? \" - Requirement met\"\r\n                                    : \" - Requirement not met\"}\r\n                                </span>\r\n                              </span>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </HoverCardContent>\r\n                    </HoverCard>\r\n                  </div>\r\n                  <Input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Choose Your Password.\"\r\n                    type={isVisible ? \"text\" : \"password\"}\r\n                    aria-invalid={PasswordStrength.score < 4}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setIsVisible((prev) => !prev)}\r\n                    aria-label={isVisible ? \"Hide password\" : \"Show password\"}\r\n                    className=\"absolute inset-y-0 right-0 top-6 outline-none flex items-center justify-center w-9 text-muted-foreground/80 hover:text-foreground  \"\r\n                  >\r\n                    {isVisible ? <EyeOff size={16} /> : <Eye size={16} />}\r\n                  </button>\r\n                </div>\r\n                <div className=\"flex gap-2 w-full justify-between \">\r\n                  <span\r\n                    className={`${PasswordStrength.score >= 1 ? \"bg-red-200\" : \"bg-border\"}  p-1 rounded-full w-full`}\r\n                  ></span>\r\n                  <span\r\n                    className={`${\r\n                      PasswordStrength.score >= 2 ? \"bg-red-300\" : \"bg-border\"\r\n                    }  p-1 rounded-full w-full`}\r\n                  ></span>\r\n                  <span\r\n                    className={`${\r\n                      PasswordStrength.score >= 3 ? \"bg-red-400\" : \"bg-border\"\r\n                    }  p-1 rounded-full w-full`}\r\n                  ></span>\r\n                  <span\r\n                    className={`${\r\n                      PasswordStrength.score >= 4 ? \"bg-green-500\" : \"bg-border\"\r\n                    }  p-1 rounded-full w-full`}\r\n                  ></span>\r\n                  <span\r\n                    className={`${\r\n                      PasswordStrength.score >= 5 ? \"bg-green-600\" : \"bg-border\"\r\n                    }  p-1 rounded-full w-full`}\r\n                  ></span>\r\n                </div>\r\n\r\n                <div className=\"grid gap-2 relative\">\r\n                  <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\r\n                  <Input\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    type={isVisible ? \"text\" : \"password\"}\r\n                    placeholder=\"Comfirm Your Password.\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setIsVisible((prev) => !prev)}\r\n                    aria-label={isVisible ? \"Hide password\" : \"Show password\"}\r\n                    className=\"absolute inset-y-0 right-0 top-6 outline-none flex items-center justify-center w-9 text-muted-foreground/80 hover:text-foreground  \"\r\n                  >\r\n                    {isVisible ? <EyeOff size={16} /> : <Eye size={16} />}\r\n                  </button>\r\n                </div>\r\n\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                  Create an account\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  Sign up with Google\r\n                </Button>\r\n              </div>\r\n            </form>\r\n            <div className=\"mt-4 text-center text-sm\">\r\n              Already have an account?{\" \"}\r\n              <Link href=\"#\" className=\"underline\">\r\n                Sign in\r\n              </Link>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignUpTwo;\r\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "meta": {
    "iframeHeight": "750px"
  },
  "categories": [
    "signup"
  ]
}