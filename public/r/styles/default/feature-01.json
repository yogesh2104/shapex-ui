{
  "name": "feature-01",
  "type": "registry:block",
  "description": "A Feature Block.",
  "dependencies": [
    "framer-motion"
  ],
  "registryDependencies": [
    "card",
    "accordion"
  ],
  "files": [
    {
      "path": "blocks/feature/feature-01/feature-one.tsx",
      "content": "\"use client\";\r\n\r\n/**\r\n *\r\n * This component is inspire by Eldora UI\r\n *\r\n * Source: [https://www.eldoraui.site/docs/components/features]\r\n */\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { motion, useInView } from \"framer-motion\";\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/registry/default/ui/accordion\";\r\nimport { Card } from \"@/registry/default/ui/card\";\r\nimport { cn } from \"@/registry/default/lib/utils\";\r\n\r\nexport type FeatureItem = {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n  image?: string;\r\n  video?: string;\r\n  icon?: React.ReactNode;\r\n};\r\n\r\nexport interface FeaturesProps {\r\n  collapseDelay?: number;\r\n  ltr?: boolean;\r\n  linePosition?: \"left\" | \"right\" | \"top\" | \"bottom\";\r\n  data: FeatureItem[];\r\n  className?: string;\r\n}\r\n\r\nconst LineProgress: React.FC<{\r\n  position: FeaturesProps[\"linePosition\"];\r\n  isActive: boolean;\r\n  duration: number;\r\n}> = ({ position, isActive, duration }) => {\r\n  const baseClasses = cn(\r\n    \"absolute overflow-hidden\",\r\n    position === \"left\" || position === \"right\"\r\n      ? \"inset-y-0 w-0.5\"\r\n      : \"inset-x-0 h-0.5\",\r\n    \"rounded-lg bg-neutral-300/50 dark:bg-neutral-300/30\",\r\n  );\r\n\r\n  const progressClasses = cn(\r\n    \"absolute bg-primary dark:bg-white transition-all ease-linear\",\r\n    position === \"left\" || position === \"right\"\r\n      ? \"left-0 top-0 w-full\"\r\n      : \"left-0 h-full\",\r\n    position === \"left\" && \"left-0 right-auto\",\r\n    position === \"right\" && \"left-auto right-0\",\r\n    position === \"top\" && \"top-0\",\r\n    position === \"bottom\" && \"bottom-0\",\r\n    isActive\r\n      ? position === \"left\" || position === \"right\"\r\n        ? \"h-full\"\r\n        : \"w-full\"\r\n      : position === \"left\" || position === \"right\"\r\n        ? \"h-0\"\r\n        : \"w-0\",\r\n  );\r\n\r\n  return (\r\n    <div className={baseClasses}>\r\n      <div\r\n        className={progressClasses}\r\n        style={{\r\n          transitionDuration: isActive ? `${duration}ms` : \"0s\",\r\n          transformOrigin:\r\n            position === \"left\" || position === \"right\" ? \"top\" : \"left\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FeatureCard: React.FC<{\r\n  feature: FeatureItem;\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n  collapseDelay: number;\r\n}> = ({ feature, isActive, onClick, collapseDelay }) => (\r\n  <Card\r\n    className=\"relative mr-8 grid h-full max-w-60 shrink-0 items-start justify-center py-4 last:mr-0\"\r\n    onClick={onClick}\r\n    style={{ scrollSnapAlign: \"center\" }}\r\n  >\r\n    <LineProgress position=\"top\" isActive={isActive} duration={collapseDelay} />\r\n    <h2 className=\"text-xl font-bold\">{feature.title}</h2>\r\n    <p className=\"mx-0 max-w-sm text-balance text-sm text-muted-foreground\">\r\n      {feature.content}\r\n    </p>\r\n  </Card>\r\n);\r\n\r\nconst FeatureOne = ({\r\n  collapseDelay = 5000,\r\n  ltr = false,\r\n  linePosition = \"left\",\r\n  data = [],\r\n  className,\r\n}: FeaturesProps) => {\r\n  const [currentIndex, setCurrentIndex] = useState<number>(-1);\r\n  const carouselRef = useRef<HTMLUListElement>(null);\r\n  const containerRef = useRef(null);\r\n  const isInView = useInView(containerRef, { once: true, amount: 0.5 });\r\n\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      const timer = setTimeout(() => setCurrentIndex(0), 100);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isInView]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentIndex((prev) => (prev + 1) % data.length);\r\n    }, collapseDelay);\r\n    return () => clearInterval(timer);\r\n  }, [collapseDelay, data.length]);\r\n\r\n  const MediaContent = () => {\r\n    const currentFeature = data[currentIndex];\r\n\r\n    if (!currentFeature) {\r\n      return <Card className=\"aspect-auto size-full bg-muted\" />;\r\n    }\r\n\r\n    if (currentFeature.image) {\r\n      return (\r\n        <motion.img\r\n          key={currentIndex}\r\n          src={currentFeature.image}\r\n          alt={currentFeature.title}\r\n          className=\"aspect-auto size-full rounded-xl border border-border object-cover object-left-top p-1 shadow-lg\"\r\n          initial={{ opacity: 0, scale: 0.98 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          exit={{ opacity: 0, scale: 0.98 }}\r\n          transition={{ duration: 0.25, ease: \"easeOut\" }}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (currentFeature.video) {\r\n      return (\r\n        <video\r\n          preload=\"auto\"\r\n          src={currentFeature.video}\r\n          className=\"aspect-auto size-full rounded-lg object-cover shadow-lg\"\r\n          autoPlay\r\n          loop\r\n          muted\r\n        />\r\n      );\r\n    }\r\n\r\n    return <Card className=\"aspect-auto size-full bg-muted\" />;\r\n  };\r\n\r\n  return (\r\n    <section\r\n      ref={containerRef}\r\n      className={cn(\"py-6\", className)}\r\n      id=\"features\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"mx-auto max-w-6xl\">\r\n          <div className=\"mx-auto my-12 grid h-full items-center gap-10 lg:grid-cols-2\">\r\n            <div\r\n              className={cn(\r\n                \"order-1 hidden lg:flex\",\r\n                ltr ? \"lg:order-2 lg:justify-end\" : \"justify-start\",\r\n              )}\r\n            >\r\n              <Accordion\r\n                type=\"single\"\r\n                value={`item-${currentIndex}`}\r\n                onValueChange={(value) =>\r\n                  setCurrentIndex(Number(value.split(\"-\")[1]))\r\n                }\r\n                className=\"w-full\"\r\n              >\r\n                {data.map((item, index) => (\r\n                  <AccordionItem\r\n                    key={item.id}\r\n                    value={`item-${index}`}\r\n                    className=\"relative mb-8 last:mb-0 border-b-0\"\r\n                  >\r\n                    <LineProgress\r\n                      position={linePosition}\r\n                      isActive={currentIndex === index}\r\n                      duration={collapseDelay}\r\n                    />\r\n                    <div className=\"relative flex items-center gap-4 p-2\">\r\n                      {item.icon && (\r\n                        <div className=\"flex size-10 shrink-0 items-center justify-center rounded-full bg-primary/10\">\r\n                          {item.icon}\r\n                        </div>\r\n                      )}\r\n                      <div className=\"flex-1\">\r\n                        <AccordionTrigger className=\"py-2 hover:no-underline\">\r\n                          <h3 className=\"text-xl font-bold\">{item.title}</h3>\r\n                        </AccordionTrigger>\r\n                        <AccordionContent className=\"text-muted-foreground\">\r\n                          {item.content}\r\n                        </AccordionContent>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n\r\n            <div\r\n              className={cn(\r\n                \"h-[350px] min-h-[200px] w-auto\",\r\n                ltr && \"lg:order-1\",\r\n              )}\r\n            >\r\n              <MediaContent />\r\n            </div>\r\n\r\n            <ul\r\n              ref={carouselRef}\r\n              className=\"flex snap-x snap-mandatory flex-nowrap overflow-x-auto py-10 lg:hidden [-ms-overflow-style:none] [-webkit-mask-image:linear-gradient(90deg,transparent,black_20%,white_80%,transparent)] [mask-image:linear-gradient(90deg,transparent,black_20%,white_80%,transparent)] [scrollbar-width:none] [&::-webkit-scrollbar]:hidden\"\r\n              style={{ padding: \"50px calc(50%)\" }}\r\n            >\r\n              {data.map((item, index) => (\r\n                <FeatureCard\r\n                  key={item.id}\r\n                  feature={item}\r\n                  isActive={currentIndex === index}\r\n                  onClick={() => setCurrentIndex(index)}\r\n                  collapseDelay={collapseDelay}\r\n                />\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FeatureOne;\r\n",
      "type": "registry:component",
      "target": "components/shapexui/feature.tsx"
    }
  ],
  "meta": {
    "iframeHeight": "500px"
  },
  "categories": [
    "feature"
  ]
}