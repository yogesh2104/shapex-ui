{
  "name": "analytics",
  "type": "registry:block",
  "description": "Analytics dashboard",
  "registryDependencies": [],
  "files": [
    {
      "path": "blocks/analytics/page.tsx",
      "content": "import Analytics from \"@/registry/default/blocks/analytics/components/analytics\"\r\n\r\nexport default function Page() {\r\n  return (\r\n    <Analytics/>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/analytics/components/app-sidebar.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  ChartColumn,\r\n  House,\r\n  Settings2,\r\n  UserRound,\r\n} from \"lucide-react\"\r\n\r\nimport { NavMain } from \"@/registry/default/blocks/analytics/components/nav-main\"\r\nimport { NavUser } from \"@/registry/default/blocks/analytics/components/nav-user\"\r\nimport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarHeader,\r\n  SidebarRail,\r\n  SidebarMenu,\r\n  SidebarMenuItem,\r\n  useSidebar,\r\n} from \"@/components/ui/sidebar\"\r\nimport Logo from \"@/components/logo\"\r\n\r\nconst data = {\r\n  user: {\r\n    name: \"Baburao Ganpat Rao Apte\",\r\n    email: \"m@example.com\",\r\n    avatar: \"/character/babu-rao.jpg\"\r\n  },\r\n  navMain: [\r\n    {\r\n      title: \"Home\",\r\n      url: \"#\",\r\n      icon: House,\r\n      isActive:true\r\n    },\r\n    {\r\n      title: \"Chart\",\r\n      url: \"#\",\r\n      icon: ChartColumn,\r\n    },\r\n    {\r\n      title: \"Users\",\r\n      url: \"#\",\r\n      icon: UserRound,\r\n    },\r\n    {\r\n      title: \"Settings\",\r\n      url: \"#\",\r\n      icon: Settings2,\r\n    },\r\n  ],\r\n}\r\n\r\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\r\n  const { toggleSidebar } = useSidebar()\r\n  return (\r\n    <Sidebar collapsible=\"icon\" {...props}>\r\n      <SidebarHeader>\r\n        <SidebarMenu>\r\n          <SidebarMenuItem onClick={toggleSidebar}>\r\n            <div className=\"flex cursor-pointer aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground\">\r\n              <Logo/> {/* repalce with your logo */}\r\n            </div>\r\n          </SidebarMenuItem>\r\n        </SidebarMenu>\r\n      </SidebarHeader>\r\n      <SidebarContent>\r\n        <NavMain items={data.navMain} />\r\n      </SidebarContent>\r\n      <SidebarFooter>\r\n        <NavUser user={data.user} />\r\n      </SidebarFooter>\r\n      <SidebarRail />\r\n    </Sidebar>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/analytics/components/nav-main.tsx",
      "content": "\"use client\"\r\n\r\nimport { type LucideIcon } from \"lucide-react\"\r\nimport {\r\n  SidebarGroup,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n} from \"@/components/ui/sidebar\"\r\nimport { cn } from \"@/registry/default/lib/utils\"\r\n\r\nexport function NavMain({\r\n  items,\r\n}: {\r\n  items: {\r\n    title: string\r\n    url: string\r\n    icon?: LucideIcon\r\n    isActive?: boolean\r\n    items?: {\r\n      title: string\r\n      url: string\r\n    }[]\r\n  }[]\r\n}) {\r\n  return (\r\n    <SidebarGroup>\r\n      <SidebarMenu>\r\n        {items.map((item) => (\r\n            <SidebarMenuItem key={item.title}>\r\n                <SidebarMenuButton tooltip={item.title} className={cn(item.isActive && \"bg-muted/50\")}>\r\n                    {item.icon && <item.icon />}<a href={item.url}><span>{item.title}</span></a>\r\n                </SidebarMenuButton>\r\n            </SidebarMenuItem>\r\n        ))}\r\n      </SidebarMenu>\r\n    </SidebarGroup>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/analytics/components/nav-user.tsx",
      "content": "\"use client\"\r\n\r\nimport {\r\n  BadgeCheck,\r\n  Bell,\r\n  ChevronsUpDown,\r\n  CreditCard,\r\n  LogOut,\r\n  Sparkles,\r\n} from \"lucide-react\"\r\n\r\nimport {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/components/ui/avatar\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuGroup,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport {\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n} from \"@/components/ui/sidebar\"\r\n\r\nexport function NavUser({\r\n  user,\r\n}: {\r\n  user: {\r\n    name: string\r\n    email: string\r\n    avatar: string\r\n  }\r\n}) {\r\n  return (\r\n    <SidebarMenu>\r\n      <SidebarMenuItem>\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <SidebarMenuButton\r\n              size=\"lg\"\r\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\r\n            >\r\n              <Avatar className=\"h-8 w-8 rounded-lg\">\r\n                <AvatarImage src={user.avatar} alt={user.name} />\r\n                <AvatarFallback className=\"rounded-lg\">BRA</AvatarFallback>\r\n              </Avatar>\r\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                <span className=\"truncate font-semibold\">{user.name}</span>\r\n                <span className=\"truncate text-xs\">{user.email}</span>\r\n              </div>\r\n              <ChevronsUpDown className=\"ml-auto size-4\" />\r\n            </SidebarMenuButton>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent\r\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\r\n            side=\"bottom\"\r\n            align=\"end\"\r\n            sideOffset={4}\r\n          >\r\n            <DropdownMenuLabel className=\"p-0 font-normal\">\r\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\r\n                <Avatar className=\"h-8 w-8 rounded-lg\">\r\n                  <AvatarImage src={user.avatar} alt={user.name} />\r\n                  <AvatarFallback className=\"rounded-lg\">BRA</AvatarFallback>\r\n                </Avatar>\r\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                  <span className=\"truncate font-semibold\">{user.name}</span>\r\n                  <span className=\"truncate text-xs\">{user.email}</span>\r\n                </div>\r\n              </div>\r\n            </DropdownMenuLabel>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuGroup>\r\n              <DropdownMenuItem>\r\n                <Sparkles />\r\n                Upgrade to Pro\r\n              </DropdownMenuItem>\r\n            </DropdownMenuGroup>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuGroup>\r\n              <DropdownMenuItem>\r\n                <BadgeCheck />\r\n                Account\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem>\r\n                <CreditCard />\r\n                Billing\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem>\r\n                <Bell />\r\n                Notifications\r\n              </DropdownMenuItem>\r\n            </DropdownMenuGroup>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem>\r\n              <LogOut />\r\n              Log out\r\n            </DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </SidebarMenuItem>\r\n    </SidebarMenu>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/analytics/components/analytics-chart.tsx",
      "content": "'use client'\r\n\r\nimport { Download } from \"lucide-react\"\r\nimport { CartesianGrid, Line, LineChart, XAxis } from \"recharts\"\r\nimport {\r\n    ChartConfig,\r\n    ChartContainer,\r\n    ChartTooltip,\r\n    ChartTooltipContent,\r\n} from \"@/components/ui/chart\"\r\nimport { Button } from \"@/registry/default/ui/button\"\r\n\r\nconst chartData = [\r\n    { date: \"2025-01-01\", desktop: 222,  },\r\n    { date: \"2025-01-02\", desktop: 97,  },\r\n    { date: \"2025-01-03\", desktop: 167,  },\r\n    { date: \"2025-01-01\", desktop: 242,  },\r\n    { date: \"2025-01-05\", desktop: 373,  },\r\n    { date: \"2025-01-06\", desktop: 301,  },\r\n    { date: \"2025-01-07\", desktop: 245,  },\r\n    { date: \"2025-01-08\", desktop: 409,  },\r\n    { date: \"2025-01-09\", desktop: 59,  },\r\n    { date: \"2025-01-10\", desktop: 261,  },\r\n    { date: \"2025-01-11\", desktop: 327,  },\r\n    { date: \"2025-01-12\", desktop: 292,  },\r\n    { date: \"2025-01-13\", desktop: 342,  },\r\n    { date: \"2025-01-14\", desktop: 137,  },\r\n    { date: \"2025-01-15\", desktop: 120,  },\r\n    { date: \"2025-01-16\", desktop: 138,  },\r\n    { date: \"2025-01-17\", desktop: 446,  },\r\n    { date: \"2025-01-18\", desktop: 364,  },\r\n    { date: \"2025-01-19\", desktop: 243,  },\r\n    { date: \"2025-01-20\", desktop: 89,  },\r\n    { date: \"2025-01-21\", desktop: 137,  },\r\n    { date: \"2025-01-22\", desktop: 224,  },\r\n    { date: \"2025-01-23\", desktop: 138,  },\r\n    { date: \"2025-01-24\", desktop: 387,  },\r\n    { date: \"2025-01-25\", desktop: 215,  },\r\n    { date: \"2025-01-26\", desktop: 75,  },\r\n    { date: \"2025-01-27\", desktop: 383,  },\r\n    { date: \"2025-01-28\", desktop: 122,  },\r\n    { date: \"2025-01-29\", desktop: 315,  },\r\n    { date: \"2025-01-30\", desktop: 454,  },\r\n    { date: \"2025-02-01\", desktop: 165,  },\r\n    { date: \"2025-02-02\", desktop: 293,  },\r\n    { date: \"2025-02-03\", desktop: 247,  },\r\n    { date: \"2025-02-04\", desktop: 385,  },\r\n    { date: \"2025-02-05\", desktop: 481,  },\r\n    { date: \"2025-02-06\", desktop: 498,  },\r\n    { date: \"2025-02-07\", desktop: 388,  },\r\n    { date: \"2025-02-08\", desktop: 149,  },\r\n    { date: \"2025-02-09\", desktop: 227,  },\r\n    { date: \"2025-02-10\", desktop: 293,  },\r\n    { date: \"2025-02-11\", desktop: 335,  },\r\n    { date: \"2025-02-12\", desktop: 197,  },\r\n    { date: \"2025-02-13\", desktop: 197,  },\r\n    { date: \"2025-02-14\", desktop: 448,  },\r\n    { date: \"2025-02-15\", desktop: 473,  },\r\n    { date: \"2025-02-16\", desktop: 338,  },\r\n    { date: \"2025-02-17\", desktop: 499,  },\r\n    { date: \"2025-02-18\", desktop: 315,  },\r\n    { date: \"2025-02-19\", desktop: 235,  },\r\n    { date: \"2025-02-20\", desktop: 177,  },\r\n    { date: \"2025-02-21\", desktop: 82,  },\r\n    { date: \"2025-02-22\", desktop: 81,  },\r\n    { date: \"2025-02-23\", desktop: 252,  },\r\n    { date: \"2025-02-24\", desktop: 294,  },\r\n    { date: \"2025-02-25\", desktop: 201,  },\r\n    { date: \"2025-02-26\", desktop: 213,  },\r\n    { date: \"2025-02-27\", desktop: 420,  },\r\n    { date: \"2025-02-28\", desktop: 233,  },\r\n    { date: \"2025-02-29\", desktop: 78,  },\r\n    { date: \"2025-02-30\", desktop: 340,  },\r\n    { date: \"2025-02-31\", desktop: 178,  },\r\n    { date: \"2025-03-30\", desktop: 446,  },\r\n]\r\n\r\nconst chartConfig = {\r\n    views: {\r\n        label: \"Page Views\",\r\n    },\r\n    desktop: {\r\n        label: \"Desktop\",\r\n        color: \"hsl(var(--chart-1))\",\r\n    },\r\n} satisfies ChartConfig\r\n\r\nexport function AnalyticsChart() {\r\n  return (\r\n    <div className=\"rounded-2xl border bg-card\">\r\n      <div className=\"h-[280px]\">\r\n        <ChartContainer\r\n          config={chartConfig}\r\n          className=\"aspect-auto h-[280px] w-full px-2\"\r\n        >\r\n          <LineChart\r\n            accessibilityLayer\r\n            data={chartData}\r\n            margin={{\r\n              left: 12,\r\n              right: 12,\r\n            }}\r\n          >\r\n            <CartesianGrid vertical={false} />\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickMargin={8}\r\n              minTickGap={32}\r\n              tickFormatter={(value) => {\r\n                const date = new Date(value)\r\n                return date.toLocaleDateString(\"en-US\", {\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })\r\n              }}\r\n            />\r\n            <ChartTooltip\r\n              content={\r\n                <ChartTooltipContent\r\n                  className=\"w-[150px]\"\r\n                  nameKey=\"views\"\r\n                  labelFormatter={(value) => {\r\n                    return new Date(value).toLocaleDateString(\"en-US\", {\r\n                      month: \"short\",\r\n                      day: \"numeric\",\r\n                      year: \"numeric\",\r\n                    })\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n            <Line\r\n              dataKey=\"desktop\"\r\n              type=\"monotone\"\r\n              stroke=\"#4F46E5\"\r\n              strokeWidth={1}\r\n              dot={{\r\n                fill: \"#4F46E5\",\r\n              }}\r\n              \r\n            />\r\n          </LineChart>\r\n        </ChartContainer>\r\n      </div>\r\n      <div className=\"mt-4 p-4 flex flex-col lg:flex-row gap-2 lg:items-center lg:justify-between\">\r\n        \r\n        <Button variant={\"outline\"} className=\"flex rounded-lg border\">\r\n          Download Report<Download className=\"size-4\" />\r\n        </Button>\r\n\r\n        <div className=\"flex items-center gap-4\">\r\n          <span className=\"text-sm font-medium text-green-500\">+8.8%</span>\r\n          <span className=\"rounded-full bg-primary/10 px-3 py-1 text-sm font-medium text-primary\">\r\n            All Time High\r\n          </span>\r\n          <div className=\"text-2xl font-bold\">98.78%\r\n            <span className=\"ml-2 text-sm text-muted-foreground\">Total Sales</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/analytics/components/customer-table.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/registry/default/ui/table\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Avatar, AvatarImage, AvatarFallback } from \"@/components/ui/avatar\"\r\nimport { Download, MoreVertical, Settings, Filter, PlusCircle, Trash2 } from 'lucide-react'\r\n\r\ninterface Customer {\r\n  id: string\r\n  name: string\r\n  username: string\r\n  avatar: string\r\n  paymentMethod: \"visa\" | \"mastercard\"\r\n  cardNumber: string\r\n  categories: Array<{\r\n    name: string\r\n    color: string\r\n  }>\r\n  clickthrough: number\r\n}\r\n\r\nconst customers: Customer[] = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Bulla\",\r\n    username: \"@bulla\",\r\n    avatar: \"/character/bulla.jpg\",\r\n    paymentMethod: \"visa\",\r\n    cardNumber: \"****-**18\",\r\n    categories: [\r\n      { name: \"open\", color: \"bg-purple-100 text-purple-700\" },\r\n      { name: \"Gunda\", color: \"bg-orange-100 text-orange-700\" },\r\n      { name: \"Lamboo Aata\", color: \"bg-red-100 text-red-700\" }\r\n    ],\r\n    clickthrough: 40\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Majnu Bhai\",\r\n    username: \"@majnubhai\",\r\n    avatar: \"/character/majnu-bhai.jpg\",\r\n    paymentMethod: \"mastercard\",\r\n    cardNumber: \"****-**99\",\r\n    categories: [\r\n      { name: \"Khokha\", color: \"bg-purple-100 text-purple-700\" },\r\n      { name: \"Painting\", color: \"bg-blue-100 text-blue-700\" }\r\n    ],\r\n    clickthrough: 10\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Vasooli\",\r\n    username: \"@vasooli\",\r\n    avatar: \"/character/Vasooli.webp\",\r\n    paymentMethod: \"mastercard\",\r\n    cardNumber: \"****-**69\",\r\n    categories: [\r\n      { name: \"number bol\", color: \"bg-purple-100 text-purple-700\" },\r\n      { name: \"Panvel\", color: \"bg-pink-100 text-pink-700\" }\r\n    ],\r\n    clickthrough: 70\r\n  },\r\n]\r\n\r\nexport function CustomerTable() {\r\n  return (\r\n    <div className=\"rounded-2xl border mt-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center justify-between p-4 space-y-4 sm:space-y-0\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <h2 className=\"text-lg font-semibold\">Your Customers</h2>\r\n          <Badge variant=\"secondary\" className=\"bg-primary/10 text-primary\">New</Badge>\r\n        </div>\r\n        <div className=\"flex flex-wrap items-center gap-2\">\r\n          <Button variant=\"outline\" size=\"sm\" className=\"gap-2 rounded-2xl\">\r\n            <Filter className=\"h-4 w-4\" />\r\n            <span className=\"sm:inline\">Filter</span>\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"gap-2 rounded-2xl\">\r\n            <Settings className=\"h-4 w-4\" />\r\n            <span className=\"sm:inline\">Settings</span>\r\n          </Button>\r\n          <Button size=\"sm\" className=\"gap-2 rounded-2xl\">\r\n            <PlusCircle className=\"h-4 w-4\" />\r\n            <span className=\"sm:inline\">Add User</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"overflow-x-auto\">\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead className=\"w-[300px]\">Full Name</TableHead>\r\n              <TableHead className=\"hidden sm:table-cell\">Payment Methods</TableHead>\r\n              <TableHead className=\"hidden sm:table-cell\">Category</TableHead>\r\n              <TableHead className=\"text-right hidden sm:table-cell\">Clickthrough Percentage</TableHead>\r\n              <TableHead className=\"w-[150px]\"></TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {customers.map((customer) => (\r\n              <TableRow key={customer.id}>\r\n                <TableCell>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <Avatar>\r\n                      <AvatarImage src={customer.avatar} alt={customer.name} />\r\n                      <AvatarFallback>{customer.name.charAt(0)}</AvatarFallback>\r\n                    </Avatar>\r\n                    <div>\r\n                      <div className=\"font-medium\">{customer.name}</div>\r\n                      <div className=\"text-sm text-muted-foreground\">{customer.username}</div>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell className=\"hidden sm:table-cell\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {customer.paymentMethod === \"visa\" ? (\r\n                      <svg className=\"h-4 w-6\" viewBox=\"0 0 36 24\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#0a27ff\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\"><rect x=\"-2.4\" y=\"-2.4\" width=\"28.80\" height=\"28.80\" rx=\"0\" fill=\"#7ed0ec\"></rect></g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"><path d=\"M16.539 9.186a4.155 4.155 0 0 0-1.451-.251c-1.6 0-2.73.806-2.738 1.963-.01.85.803 1.329 1.418 1.613.631.292.842.476.84.737-.004.397-.504.577-.969.577-.639 0-.988-.089-1.525-.312l-.199-.093-.227 1.332c.389.162 1.09.301 1.814.313 1.701 0 2.813-.801 2.826-2.032.014-.679-.426-1.192-1.352-1.616-.563-.275-.912-.459-.912-.738 0-.247.299-.511.924-.511a2.95 2.95 0 0 1 1.213.229l.15.067.227-1.287-.039.009zm4.152-.143h-1.25c-.389 0-.682.107-.852.493l-2.404 5.446h1.701l.34-.893 2.076.002c.049.209.199.891.199.891h1.5l-1.31-5.939zm-10.642-.05h1.621l-1.014 5.942H9.037l1.012-5.944v.002zm-4.115 3.275.168.825 1.584-4.05h1.717l-2.551 5.931H5.139l-1.4-5.022a.339.339 0 0 0-.149-.199 6.948 6.948 0 0 0-1.592-.589l.022-.125h2.609c.354.014.639.125.734.503l.57 2.729v-.003zm12.757.606.646-1.662c-.008.018.133-.343.215-.566l.111.513.375 1.714H18.69v.001h.001z\"></path></g></svg>\r\n                    ) : (\r\n                      <svg className=\"h-4 w-6\" viewBox=\"0 0 36 24\" fill=\"none\">\r\n                        <rect width=\"36\" height=\"24\" rx=\"4\" fill=\"#EB001B\"/>\r\n                        <circle cx=\"13\" cy=\"12\" r=\"7\" fill=\"#FF5F00\"/>\r\n                        <circle cx=\"23\" cy=\"12\" r=\"7\" fill=\"#F79E1B\"/>\r\n                      </svg>\r\n                    )}\r\n                    <span className=\"text-sm text-muted-foreground\">\r\n                      Ends in {customer.cardNumber}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell className=\"hidden sm:table-cell\">\r\n                  <div className=\"flex flex-wrap gap-1\">\r\n                    {customer.categories.map((category, i) => (\r\n                      <span\r\n                        key={i}\r\n                        className={`inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium ${category.color}`}\r\n                      >\r\n                        {category.name}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell className=\"text-right hidden sm:table-cell\">\r\n                  <div className=\"flex items-center justify-end gap-2\">\r\n                    <div className=\"w-32 h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-blue-600\"\r\n                        style={{ width: `${customer.clickthrough}%` }}\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-sm font-medium\">{customer.clickthrough}%</span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className=\"flex items-center justify-end gap-2\">\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button variant=\"ghost\" size=\"icon\" className=\"hidden sm:inline-flex\">\r\n                      <Download className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                      <MoreVertical className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/analytics/components/info-card.tsx",
      "content": "import { Eye, Activity, Zap } from 'lucide-react'\r\n\r\ninterface MetricCardProps {\r\n  title: string\r\n  value: string | number\r\n  change: number\r\n  icon: \"visitors\" | \"engagement\" | \"conversion\"\r\n}\r\n\r\nexport function InfoCard({ title, value, change, icon }: MetricCardProps) {\r\n  const icons = {\r\n    visitors: <Eye className=\"h-4 w-4 text-primary\" />,\r\n    engagement: <Activity className=\"h-4 w-4 text-primary\" />,\r\n    conversion: <Zap className=\"h-4 w-4 text-primary\" />\r\n  }\r\n\r\n  return (\r\n      <div className=\"flex items-center justify-between p-4\">\r\n        <div className=\"space-y-1\">\r\n          <p className=\"text-lg text-muted-foreground\">{title}</p>\r\n          <div className=\"flex items-center gap-2\">\r\n            <p className=\"text-3xl font-bold\">{value.toLocaleString()}</p>\r\n            <span className={`text-sm ${change >= 0 ? \"text-green-500\" : \"text-red-500\"}`}>\r\n              {change >= 0 ? \"↑\" : \"↓\"} {Math.abs(change)}%\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"rounded-full bg-primary/10 p-2\">\r\n          {icons[icon]}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "meta": {
    "iframeHeight": "820px"
  },
  "categories": [
    "analytics"
  ]
}