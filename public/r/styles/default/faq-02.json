{
  "name": "faq-02",
  "type": "registry:block",
  "description": "A FAQs.",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "registryDependencies": [
    "badge",
    "input"
  ],
  "files": [
    {
      "path": "blocks/faq/faq-02/faq-two.tsx",
      "content": "import { Badge } from \"@/registry/default/ui/badge\";\r\nimport { Input } from \"@/registry/default/ui/input\";\r\nimport { Search } from \"lucide-react\";\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"./accordion\";\r\n\r\n\r\nconst FAQ_SECTIONS = [\r\n  {\r\n    id: \"what-is\",\r\n    question: \"What is ShapeX UI?\",\r\n    answer:\r\n      \"ShapeX UI is a comprehensive design system and UI kit that helps designers and developers create consistent, beautiful interfaces.\",\r\n  },\r\n  {\r\n    id: \"why-need\",\r\n    question: \"Why do I need a UI kit?\",\r\n    answer:\r\n      \"A UI kit helps maintain consistency across your projects, speeds up your workflow, and ensures best practices in design and development.\",\r\n  },\r\n  {\r\n    id: \"what does it offer\",\r\n    question: \"What is this UI library, and what does it offer?\",\r\n    answer:\r\n      \"This UI library is built on top of ShadCN UI and includes 30+ pre-designed components such as headers, footers, login forms, sign-up forms, FAQs, CTAs, contact sections, and more. It allows developers to quickly build high-quality user interfaces with ease.\",\r\n  },\r\n  {\r\n    id: \"tech stack\",\r\n    question: \"Is this library compatible with my projectâ€™s tech stack?\",\r\n    answer:\r\n      \"Yes, the library is compatible with modern JavaScript frameworks like React.js and Next.js. It is designed to integrate seamlessly with Tailwind CSS, as it is built on ShadCN UI principles.\",\r\n  },\r\n  {\r\n    id: \"design needs\",\r\n    question: \"Can I customize the components to fit my design needs?\",\r\n    answer:\r\n      \"Absolutely! All components are fully customizable and allow you to tweak styles, variants, and layouts using Tailwind CSS or additional configurations.\",\r\n  },\r\n  {\r\n    id: \"dark mode\",\r\n    question: \"Does this library support dark mode?\",\r\n    answer:\r\n      \"Yes, the library fully supports dark mode out of the box. You can toggle between light and dark themes or configure the components to match your application's theme.\",\r\n  },\r\n  {\r\n    id: \"mobile-friendly\",\r\n    question: \"Are the components responsive and mobile-friendly?\",\r\n    answer:\r\n      \"Yes, all components are designed to be fully responsive, ensuring that they look great on devices of all sizes, from desktops to mobile phones.\",\r\n  },\r\n  {\r\n    id: \"open-source or paid\",\r\n    question: \"Is this library open-source or paid?\",\r\n    answer: \"The library is open-source.\",\r\n  },\r\n  {\r\n    id: \"request new features\",\r\n    question:\r\n      \"How can I contribute to or request new features for the library?\",\r\n    answer:\r\n      \"Contributions are welcome! You can open issues or pull requests on our GitHub repository.\",\r\n  },\r\n  {\r\n    id: \"library-access\",\r\n    question: \"How do I access the library?\",\r\n    answer:\r\n      \"The library is available through our web platform after logging in to your account.\",\r\n  },\r\n];\r\n\r\n\r\nconst FAQ = () => {\r\n  return (\r\n    <div className=\"w-full mx-auto p-6\">\r\n      <div className=\" rounded-lg border p-6 bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:24px_24px]\">\r\n        <div className=\"mb-4\">\r\n          <Badge\r\n            variant={\"outline\"}\r\n            className=\"inline-flex items-center rounded-full border px-4 py-1 text-sm font-medium\"\r\n          >\r\n            FAQs\r\n          </Badge>\r\n        </div>\r\n\r\n        <h1 className=\"text-4xl font-mono font-medium mb-6\">\r\n          What can we help you find?\r\n        </h1>\r\n\r\n        <div className=\"relative max-w-md\">\r\n          <Input\r\n            type=\"text\"\r\n            className=\"w-full px-10 py-2 border rounded-md\"\r\n            placeholder=\"Search\"\r\n          />\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid md:grid-cols-2 gap-8 mt-8\">\r\n        {FAQ_SECTIONS?.map((faq) => (\r\n          <Accordion key={faq?.id} type=\"multiple\" defaultValue={[faq.id]}>\r\n            <AccordionItem key={faq.id} value={faq.id}>\r\n              <AccordionTrigger className=\"text-left hover:no-underline\">\r\n                {faq.question}\r\n              </AccordionTrigger>\r\n              <AccordionContent>{faq.answer}</AccordionContent>\r\n            </AccordionItem>\r\n          </Accordion>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n",
      "type": "registry:component",
      "target": "components/shapexui/faq.tsx"
    },
    {
      "path": "blocks/faq/faq-02/accordion.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\r\nimport { Minus } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Accordion = AccordionPrimitive.Root;\r\n\r\nconst AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAccordionItem.displayName = \"AccordionItem\";\r\n\r\nconst AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=closed]>svg]:hidden\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <Minus className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n));\r\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\r\n\r\nconst AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\r\n    {...props}\r\n  >\r\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\r\n  </AccordionPrimitive.Content>\r\n));\r\n\r\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\r\n",
      "type": "registry:component",
      "target": "components/shapexui/accordion.tsx"
    }
  ],
  "meta": {
    "iframeHeight": "700px"
  },
  "categories": [
    "faq"
  ]
}