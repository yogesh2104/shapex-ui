{
  "name": "signup-03",
  "type": "registry:block",
  "description": "A Signup form with Step",
  "registryDependencies": [
    "button",
    "input",
    "label"
  ],
  "files": [
    {
      "path": "blocks/signup/signup-03/signup-three.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState, ChangeEvent } from \"react\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  Eye,\r\n  EyeOff,\r\n  ArrowRight,\r\n  CheckCircle2,\r\n  AlertCircle,\r\n} from \"lucide-react\";\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\n\r\ninterface FormData {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  passwordConfirm: string;\r\n}\r\n\r\ninterface FormErrors {\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  password?: string;\r\n  passwordConfirm?: string;\r\n}\r\n\r\ninterface ValidationRule {\r\n  test: (value: string) => boolean;\r\n  message: string;\r\n}\r\n\r\nconst INITIAL_FORM_STATE: FormData = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirm: \"\",\r\n};\r\n\r\n// I have use custom validation you can use zod for validation\r\nconst validationRules: Record<keyof FormData, ValidationRule[]> = {\r\n  firstName: [\r\n    {\r\n      test: (value) => value.trim().length > 0,\r\n      message: \"First name is required\",\r\n    },\r\n  ],\r\n  lastName: [\r\n    {\r\n      test: (value) => value.trim().length > 0,\r\n      message: \"Last name is required\",\r\n    },\r\n  ],\r\n  email: [\r\n    {\r\n      test: (value) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value),\r\n      message: \"Valid email is required\",\r\n    },\r\n  ],\r\n  password: [\r\n    {\r\n      test: (value) => value.length >= 8,\r\n      message: \"Password must be at least 8 characters\",\r\n    },\r\n  ],\r\n  passwordConfirm: [\r\n    {\r\n      test: (value) => value.length >= 8,\r\n      message: \"Password confirmation must be at least 8 characters\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Signup: React.FC = () => {\r\n  const [step, setStep] = useState<number>(1);\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const [formData, setFormData] = useState<FormData>(INITIAL_FORM_STATE);\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n\r\n  const validateField = (\r\n    field: keyof FormData,\r\n    value: string,\r\n  ): string | undefined => {\r\n    const rules = validationRules[field];\r\n    for (const rule of rules) {\r\n      if (!rule.test(value)) {\r\n        return rule.message;\r\n      }\r\n    }\r\n\r\n    if (field === \"passwordConfirm\" && value !== formData.password) {\r\n      return \"Passwords do not match\";\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  const handleInput = (field: keyof FormData, value: string): void => {\r\n    setFormData((prev) => ({ ...prev, [field]: value }));\r\n    const error = validateField(field, value);\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [field]: error,\r\n    }));\r\n  };\r\n\r\n  const validateStep1 = (): void => {\r\n    const newErrors: FormErrors = {};\r\n    let hasErrors = false;\r\n\r\n    ([\"firstName\", \"lastName\", \"email\"] as const).forEach((field) => {\r\n      const error = validateField(field, formData[field]);\r\n      if (error) {\r\n        newErrors[field] = error;\r\n        hasErrors = true;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    if (!hasErrors) {\r\n      setStep(2);\r\n    }\r\n  };\r\n\r\n  const validateStep2 = (): void => {\r\n    const newErrors: FormErrors = {};\r\n    let hasErrors = false;\r\n\r\n    ([\"password\", \"passwordConfirm\"] as const).forEach((field) => {\r\n      const error = validateField(field, formData[field]);\r\n      if (error) {\r\n        newErrors[field] = error;\r\n        hasErrors = true;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    if (!hasErrors) {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (): void => {\r\n    console.log(\"Form submitted:\", formData);\r\n  };\r\n\r\n  const renderInput = (\r\n    field: keyof FormData,\r\n    label: string,\r\n    type: string = \"text\",\r\n    placeholder: string = \"\",\r\n  ) => (\r\n    <div>\r\n      <Label htmlFor={field} className=\"text-black\">{label}</Label>\r\n      <div className={type === \"password\" ? \"relative\" : undefined}>\r\n        <Input\r\n          type={\r\n            type === \"password\" ? (showPassword ? \"text\" : \"password\") : type\r\n          }\r\n          id={field}\r\n          value={formData[field]}\r\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n            handleInput(field, e.target.value)\r\n          }\r\n          className={`mt-1 bg-gray-100 focus-visible:ring-1 ring-offset-0 text-black border-ring  ${errors[field] ? \"border-red-500\" : \"\"} ${\r\n            type === \"password\" ? \"pr-10\" : \"\"\r\n          }`}\r\n          placeholder={placeholder}\r\n        />\r\n        {type === \"password\" && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-slate-400 hover:text-slate-600\"\r\n          >\r\n            {showPassword ? (\r\n              <EyeOff className=\"size-4\" />\r\n            ) : (\r\n              <Eye className=\"size-4\" />\r\n            )}\r\n          </button>\r\n        )}\r\n      </div>\r\n      {errors[field] && (\r\n        <p className=\"mt-1 text-sm text-red-500\">{errors[field]}</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <section className=\"min-h-screen bg-gradient-to-b from-slate-50 to-slate-100\">\r\n      <div className=\"lg:grid lg:min-h-screen lg:grid-cols-12\">\r\n        <aside className=\"relative hidden lg:block lg:order-last lg:col-span-5 lg:h-full xl:col-span-6\">\r\n          <div className=\"absolute inset-0 bg-slate-900\">\r\n            <div className=\"absolute inset-0 flex flex-col items-center justify-center p-12 text-white\">\r\n              <div className=\"max-w-xl space-y-8\">\r\n                <h2 className=\"text-3xl font-bold\">Join our community</h2>\r\n                <div className=\"space-y-6\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <CheckCircle2 className=\"text-emerald-400\" />\r\n                    <p>30-day free trial, no credit card required</p>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <CheckCircle2 className=\"text-emerald-400\" />\r\n                    <p>Join 10,000+ happy users</p>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <CheckCircle2 className=\"text-emerald-400\" />\r\n                    <p>24/7 support team at your service</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </aside>\r\n\r\n        <main className=\"flex items-center justify-center px-8 py-8 sm:px-12 lg:col-span-7 lg:px-16 lg:py-12 xl:col-span-6\">\r\n          <div className=\"max-w-xl w-full\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute left-0 top-2 w-full\">\r\n                <div className=\"h-1 bg-slate-200 rounded\">\r\n                  <div\r\n                    className=\"h-1 bg-blue-600 rounded transition-all duration-300\"\r\n                    style={{ width: step === 1 ? \"50%\" : \"100%\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-8\">\r\n              <h1 className=\"text-2xl font-bold text-slate-900\">\r\n                {step === 1 ? \"Create your account\" : \"Set your password\"}\r\n              </h1>\r\n              <p className=\"mt-2 text-sm text-slate-600\">\r\n                {step === 1\r\n                  ? \"Start your 30-day free trial today\"\r\n                  : \"Choose a secure password to protect your account\"}\r\n              </p>\r\n            </div>\r\n\r\n            {step === 1 ? (\r\n              <div className=\"mt-6 space-y-6\">\r\n                <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\r\n                  {renderInput(\"firstName\", \"First Name\", \"text\", \"John\")}\r\n                  {renderInput(\"lastName\", \"Last Name\", \"text\", \"Doe\")}\r\n                </div>\r\n                {renderInput(\"email\", \"Email\", \"email\", \"john@example.com\")}\r\n                <Button\r\n                  onClick={validateStep1}\r\n                  variant={\"outline\"}\r\n                  className=\"w-full flex items-center justify-center gap-2\"\r\n                >\r\n                  Continue <ArrowRight className=\"size-4\" />\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"mt-6 space-y-6\">\r\n                {renderInput(\"password\", \"Password\", \"password\")}\r\n                {renderInput(\"passwordConfirm\", \"Confirm Password\", \"password\")}\r\n\r\n                <div className=\"flex items-center gap-2\">\r\n                  <AlertCircle className=\"size-4 text-slate-400\" />\r\n                  <p className=\"text-sm text-slate-600\">\r\n                    Password must be at least 8 characters\r\n                  </p>\r\n                </div>\r\n\r\n                <Button onClick={validateStep2} className=\"w-full\">\r\n                  Create account\r\n                </Button>\r\n\r\n                <Button\r\n                  type=\"button\"\r\n                  variant={\"ghost\"}\r\n                  onClick={() => setStep(1)}\r\n                  className=\"w-full text-sm text-slate-600 hover:text-slate-900\"\r\n                >\r\n                  Back to previous step\r\n                </Button>\r\n              </div>\r\n            )}\r\n\r\n            <p className=\"mt-6 text-center text-sm text-slate-500\">\r\n              Already have an account?{\" \"}\r\n              <Link href=\"#\" className=\"text-blue-600 hover:text-blue-700\">\r\n                Log in\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n",
      "type": "registry:component",
      "target": "components/shapexui/signup.tsx"
    }
  ],
  "meta": {
    "iframeHeight": "650px"
  },
  "categories": [
    "signup"
  ]
}