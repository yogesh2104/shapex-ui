{
  "name": "file-management",
  "type": "registry:block",
  "description": "file-management page",
  "registryDependencies": [],
  "files": [
    {
      "path": "blocks/full-featured/file-management/page.tsx",
      "content": "import FileManager from \"@/registry/default/blocks/full-featured/file-management/components/file-manager\";\r\n\r\nexport default function Page(){\r\n    return <FileManager/>\r\n}",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/full-featured/file-management/components/file-manager.tsx",
      "content": "'use client'\r\n\r\nimport { useState, useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Search, Upload, Filter, CircleHelp, Settings, ListFilter } from 'lucide-react'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { FileTable } from './file-table'\r\nimport { useFileManager } from '../hook/useFileManager'\r\nimport { MAX_FILE_SIZE, ACCEPTED_FILE_TYPES, FileItem } from '../types/types'\r\n\r\nexport default function FileManager() {\r\n  const { files, handleDrop, removeFile } = useFileManager()\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [allFiles] = useState<FileItem[]>([\r\n    {\r\n      id: \"1\",\r\n      name: 'Mohini Theatre',\r\n      size: '3.8 GB',\r\n      lastModified: '2025/18/16',\r\n      uploadedBy: {\r\n        name: 'Babu Rao',\r\n        email: 'babubhaiya@gmail.com',\r\n        avatar: '/character/babu-rao.jpg'\r\n      },\r\n      type: 'video'\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: 'Ishika',\r\n      size: '2 GB',\r\n      lastModified: '2006/18/16',\r\n      uploadedBy: {\r\n        name: 'Majnu Bhai',\r\n        email: 'majnubhai@gmail.com',\r\n        avatar: '/character/majnu-bhai.jpg'\r\n      },\r\n      type: 'video'\r\n    },\r\n  ])\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop: handleDrop,\r\n    accept: ACCEPTED_FILE_TYPES,\r\n    maxSize: MAX_FILE_SIZE,\r\n    multiple: true\r\n  })\r\n\r\n  const handleEdit = useCallback((id: string) => {\r\n    console.log(`Editing file with id: ${id}`)\r\n  }, [])\r\n\r\n  const filteredFiles = allFiles.filter(file => \r\n    file.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto p-6 space-y-8\">\r\n      <div className='px-4'>\r\n        <div className='flex flex-col md:flex-row gap-1 justify-start md:justify-between md:items-center'>\r\n          <div>\r\n            <h1 className='font-bold text-3xl'>Upload Asset Files</h1>\r\n            <p>Here you can manage your files & asset and other attachement</p>\r\n          </div>\r\n          <div className='flex gap-1'>\r\n            <Button variant={\"ghost\"} size={\"icon\"} className='hover:bg-none border rounded-full '><CircleHelp className='size-4'/></Button>\r\n            <Button variant={\"ghost\"} size={\"icon\"} className='hover:bg-none border rounded-full '><Settings className='size-4' /></Button>\r\n            <Button variant={\"ghost\"} size={\"icon\"} className='hover:bg-none border rounded-full '><ListFilter className='size-4' /></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div \r\n        {...getRootProps()}\r\n        className={`border-2 border-dashed border-primary/20 rounded-2xl p-8 text-center bg-primary/5 transition-colors duration-200 cursor-pointer\r\n          ${isDragActive ? 'border-primary bg-primary/10' : 'hover:border-primary/40 hover:bg-primary/10'}`}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <div className=\"flex flex-col items-center gap-2\">\r\n          <div className=\"p-4 bg-primary/10 rounded-full\">\r\n            <Upload className=\"w-6 h-6 text-primary\" />\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold text-primary\">\r\n            {isDragActive ? 'Drop files here' : 'Click here'}\r\n          </h3>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            {isDragActive ? 'Drop your files to upload' : 'to upload your file or drag and drop.'}\r\n          </p>\r\n          <p className=\"text-xs text-muted-foreground\">\r\n            Supported Format: SVG, JPG, PNG (10mb each)\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {files.length > 0 && (\r\n        <div className=\"bg-background rounded-2xl border shadow-sm\">\r\n          <div className=\"flex flex-col gap-4\">\r\n            <FileTable files={files} onRemove={removeFile} onEdit={handleEdit} />\r\n          </div>\r\n          <div className='flex justify-end gap-4 py-4 px-2'>\r\n            <Button variant={\"outline\"} className='rounded-full'>Cancle</Button>\r\n            <Button className='rounded-full'>Save Changes</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-background rounded-2xl border shadow-sm\">\r\n        <div className=\"flex flex-col gap-4\">\r\n          <div className=\"p-4 flex flex-col lg:flex-row gap-2 justify-start lg:items-center lg:justify-between\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className=\"text-lg font-semibold\">Attached Files</h2>\r\n              <span className=\"px-2 py-1 bg-primary/10 text-primary rounded-md text-sm\">\r\n                {filteredFiles.length} Total\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                <Input\r\n                  placeholder=\"Search...\"\r\n                  className=\"pl-9 w-[250px]  rounded-full\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n              <Button variant=\"default\" className='rounded-full'>\r\n                <Filter className=\"mr-2 h-4 w-4\" />Filter\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <FileTable files={filteredFiles} onRemove={removeFile} onEdit={handleEdit} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/full-featured/file-management/components/file-table.tsx",
      "content": "import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\r\nimport { Button } from '@/components/ui/button'\r\nimport { FileItem } from '../types/types'\r\n\r\ninterface FileTableProps {\r\n  files: FileItem[]\r\n  onRemove: (id: string) => void\r\n  onEdit: (id: string) => void\r\n}\r\n\r\nexport function FileTable({ files, onRemove, onEdit }: FileTableProps) {\r\n  return (\r\n    <Table>\r\n      <TableHeader>\r\n        <TableRow>\r\n          <TableHead className='px-6'>File Name</TableHead>\r\n          <TableHead className='min-w-20'>File Size</TableHead>\r\n          <TableHead className='min-w-28'>Last Modified</TableHead>\r\n          <TableHead>Uploaded By</TableHead>\r\n          <TableHead className=\"text-center\">Actions</TableHead>\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {files.map((file) => (\r\n          <TableRow key={file.id}>\r\n            <TableCell>\r\n              <div className=\"flex flex-col lg:flex-row justify-start lg:items-center gap-2 px-3\">\r\n                <div className=\"size-7 lg:size-10 flex items-center justify-center rounded bg-primary/10\">\r\n                  <div className=\"text-primary text-[8px] lg:text-xs uppercase\">{file.type}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"font-medium line-clamp-1\">{file.name}</div>\r\n                  <div className=\"text-xs text-muted-foreground\">{file.size}</div>\r\n                </div>\r\n              </div>\r\n            </TableCell>\r\n            <TableCell>{file.size}</TableCell>\r\n            <TableCell>{file.lastModified}</TableCell>\r\n            <TableCell>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Avatar className=\"h-8 w-8\">\r\n                  <AvatarImage src={file.uploadedBy.avatar} alt={file.uploadedBy.name} />\r\n                  <AvatarFallback>{file.uploadedBy.name.charAt(0)}</AvatarFallback>\r\n                </Avatar>\r\n                <div>\r\n                  <div className=\"font-medium\">{file.uploadedBy.name}</div>\r\n                  <div className=\"text-sm text-muted-foreground\">{file.uploadedBy.email}</div>\r\n                </div>\r\n              </div>\r\n            </TableCell>\r\n            <TableCell className=\"text-right\">\r\n              <Button \r\n                variant=\"ghost\" \r\n                className=\"text-red-500 hover:text-red-600\"\r\n                onClick={() => onRemove(file.id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button variant=\"ghost\" className=\"text-primary\" onClick={() => onEdit(file.id)}>\r\n                Edit\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/full-featured/file-management/hook/useFileManager.ts",
      "content": "import { useState, useCallback } from 'react'\r\nimport { FileItem, } from '../types/types'\r\nimport { toast } from 'sonner'\r\n\r\nexport function useFileManager() {\r\n  const [files, setFiles] = useState<FileItem[]>([])\r\n\r\n  const addFiles = useCallback((newFiles: FileItem[]) => {\r\n    setFiles((prev) => [...prev, ...newFiles])\r\n  }, [])\r\n\r\n  const removeFile = useCallback((id: string) => {\r\n    setFiles((prev) => prev.filter((file) => file.id !== id))\r\n    toast.success('File removed successfully')\r\n  }, [])\r\n\r\n  const handleDrop = useCallback((acceptedFiles: File[], rejectedFiles: any[]) => {\r\n    rejectedFiles.forEach(({ file, errors }) => {\r\n      if (errors[0]?.code === 'file-too-large') {\r\n        toast.error(`${file.name} is too large. Max size is 10MB`)\r\n      } else if (errors[0]?.code === 'file-invalid-type') {\r\n        toast.error(`${file.name} has an invalid file type. Accepted types are SVG, JPG, and PNG`)\r\n      }\r\n    })\r\n\r\n    const newFiles = acceptedFiles.map((file) => ({\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      name: file.name,\r\n      size: `${(file.size / (1024 * 1024)).toFixed(2)} MB`,\r\n      lastModified: new Date(file.lastModified).toLocaleDateString(),\r\n      uploadedBy: {\r\n        name: 'Bulla',\r\n        email: 'bulla@example.com',\r\n        avatar: '/character/bulla.jpg'\r\n      },\r\n      type: file.name.split('.').pop() || ''\r\n    }))\r\n\r\n    addFiles(newFiles)\r\n    toast.success(`Successfully uploaded ${acceptedFiles.length} file(s)`)\r\n  }, [addFiles])\r\n\r\n  return { files, addFiles, removeFile, handleDrop }\r\n}\r\n\r\n",
      "type": "registry:hook",
      "target": ""
    },
    {
      "path": "blocks/full-featured/file-management/types/types.ts",
      "content": "export interface FileItem {\r\n    id: string\r\n    name: string\r\n    size: string\r\n    lastModified: string\r\n    uploadedBy: {\r\n      name: string\r\n      email: string\r\n      avatar: string\r\n    }\r\n    type: string\r\n    selected?: boolean\r\n}\r\n  \r\nexport const MAX_FILE_SIZE = 10 * 1024 * 1024\r\n\r\n\r\nexport const ACCEPTED_FILE_TYPES = {\r\n    'image/svg+xml': ['.svg'],\r\n    'image/jpeg': ['.jpg', '.jpeg'],\r\n    'image/png': ['.png']\r\n}\r\n  \r\n  ",
      "type": "registry:lib",
      "target": ""
    }
  ],
  "meta": {
    "iframeHeight": "700px"
  },
  "categories": [
    "file-manager"
  ]
}